#!/usr/bin/env python3
"""
üßπ CLEANUP CUDA FIX FILES
‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CUDA ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
"""

import os
from pathlib import Path

def cleanup_cuda_files():
    """‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CUDA"""
    
    files_to_remove = [
        "fix_cuda_issues.py",
        "fix_elliott_cuda.py", 
        "test_cuda_fix.py",
        "cleanup_cuda_files.py"  # This file itself
    ]
    
    print("üßπ CUDA FIX FILES CLEANUP")
    print("=" * 40)
    
    removed_count = 0
    
    for file_path in files_to_remove:
        if Path(file_path).exists():
            try:
                os.remove(file_path)
                print(f"‚úÖ Removed: {file_path}")
                removed_count += 1
            except Exception as e:
                print(f"‚ùå Failed to remove {file_path}: {e}")
        else:
            print(f"üìÅ Not found: {file_path}")
    
    print("\n" + "=" * 40)
    print("üéâ CLEANUP COMPLETE")
    print("=" * 40)
    print(f"‚úÖ Removed {removed_count} files")
    print("üöÄ ProjectP.py is ready for production use")
    print("üìã Keep CUDA_FIX_COMPLETE_SOLUTION.md for reference")

if __name__ == "__main__":
    cleanup_cuda_files()
